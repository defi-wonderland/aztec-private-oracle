/* Autogenerated file, do not edit! */
  
use dep::std;
use dep::aztec::context::{ PrivateContext, PublicContext };
use dep::aztec::constants_gen::RETURN_VALUES_LENGTH;

// Interface for calling Token functions from a private context
struct PrivateOracleCallbackInterface {
  address: Field,
}

impl PrivateOracleCallbackInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  pub fn trigger_callback(
    self,
    context: &mut PrivateContext,
    data: [Field; 6],
    answer: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 6];

    // drop the first data element, which is the address (already in self.address)
    serialized_args[0] = data[1];
    serialized_args[1] = data[2];
    serialized_args[2] = data[3];
    serialized_args[3] = data[4];
    serialized_args[4] = data[5];
    serialized_args[5] = answer;

    // Calling the oracle_callback fn:  "oracle_callback(data: [Field; 5], answer: Field)"
    context.call_private_function(self.address, 0xc7f6658c, serialized_args)
  }
}
  
  
