/* Autogenerated file, do not edit! */
  
use dep::std;
use dep::aztec::context::{ PrivateContext, PublicContext };
use dep::aztec::constants_gen::RETURN_VALUES_LENGTH;

struct FromBurnStruct {
  address: Field,
}

struct FromBurnPublicStruct {
  address: Field,
}

struct ToMintPublicStruct {
  address: Field,
}

struct ToRedeemShieldStruct {
  address: Field,
}

struct NewAdminSetAdminStruct {
  address: Field,
}

struct MinterSetMinterStruct {
  address: Field,
}

struct FromShieldStruct {
  address: Field,
}

struct FromTransferStruct {
  address: Field,
}

struct ToTransferStruct {
  address: Field,
}

struct FromTransferPublicStruct {
  address: Field,
}

struct ToTransferPublicStruct {
  address: Field,
}

struct FromUnshieldStruct {
  address: Field,
}

struct ToUnshieldStruct {
  address: Field,
}


// Interface for calling Token functions from a private context
struct TokenPrivateContextInterface {
  address: Field,
}

impl TokenPrivateContextInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  pub fn burn(
    self,
    context: &mut PrivateContext,
    from: FromBurnStruct,
    amount: Field,
    nonce: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 3];
    serialized_args[0] = from.address;
    serialized_args[1] = amount;
    serialized_args[2] = nonce;

    context.call_private_function(self.address, 0xd4fcc96e, serialized_args)
  }
  

  pub fn burn_public(
    self,
    context: &mut PrivateContext,
    from: FromBurnPublicStruct,
    amount: Field,
    nonce: Field
  ) {
    let mut serialized_args = [0; 3];
    serialized_args[0] = from.address;
    serialized_args[1] = amount;
    serialized_args[2] = nonce;

    context.call_public_function(self.address, 0xb0e964d5, serialized_args)
  }
  

  pub fn mint_private(
    self,
    context: &mut PrivateContext,
    amount: Field,
    secret_hash: Field
  ) {
    let mut serialized_args = [0; 2];
    serialized_args[0] = amount;
    serialized_args[1] = secret_hash;

    context.call_public_function(self.address, 0x10763932, serialized_args)
  }
  

  pub fn mint_public(
    self,
    context: &mut PrivateContext,
    to: ToMintPublicStruct,
    amount: Field
  ) {
    let mut serialized_args = [0; 2];
    serialized_args[0] = to.address;
    serialized_args[1] = amount;

    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)
  }
  

  pub fn redeem_shield(
    self,
    context: &mut PrivateContext,
    to: ToRedeemShieldStruct,
    amount: Field,
    secret: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 3];
    serialized_args[0] = to.address;
    serialized_args[1] = amount;
    serialized_args[2] = secret;

    context.call_private_function(self.address, 0xb77168f2, serialized_args)
  }
  

  pub fn set_admin(
    self,
    context: &mut PrivateContext,
    new_admin: NewAdminSetAdminStruct
  ) {
    let mut serialized_args = [0; 1];
    serialized_args[0] = new_admin.address;

    context.call_public_function(self.address, 0x41b90896, serialized_args)
  }
  

  pub fn set_minter(
    self,
    context: &mut PrivateContext,
    minter: MinterSetMinterStruct,
    approve: bool
  ) {
    let mut serialized_args = [0; 2];
    serialized_args[0] = minter.address;
    serialized_args[1] = approve as Field;

    context.call_public_function(self.address, 0x7f020b80, serialized_args)
  }
  

  pub fn shield(
    self,
    context: &mut PrivateContext,
    from: FromShieldStruct,
    amount: Field,
    secret_hash: Field,
    nonce: Field
  ) {
    let mut serialized_args = [0; 4];
    serialized_args[0] = from.address;
    serialized_args[1] = amount;
    serialized_args[2] = secret_hash;
    serialized_args[3] = nonce;

    context.call_public_function(self.address, 0x1d24add0, serialized_args)
  }
  

  pub fn transfer(
    self,
    context: &mut PrivateContext,
    from: FromTransferStruct,
    to: ToTransferStruct,
    amount: Field,
    nonce: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 4];
    serialized_args[0] = from.address;
    serialized_args[1] = to.address;
    serialized_args[2] = amount;
    serialized_args[3] = nonce;

    context.call_private_function(self.address, 0xb1aa668a, serialized_args)
  }
  

  pub fn transfer_public(
    self,
    context: &mut PrivateContext,
    from: FromTransferPublicStruct,
    to: ToTransferPublicStruct,
    amount: Field,
    nonce: Field
  ) {
    let mut serialized_args = [0; 4];
    serialized_args[0] = from.address;
    serialized_args[1] = to.address;
    serialized_args[2] = amount;
    serialized_args[3] = nonce;

    context.call_public_function(self.address, 0x7db8f449, serialized_args)
  }
  

  pub fn unshield(
    self,
    context: &mut PrivateContext,
    from: FromUnshieldStruct,
    to: ToUnshieldStruct,
    amount: Field,
    nonce: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 4];
    serialized_args[0] = from.address;
    serialized_args[1] = to.address;
    serialized_args[2] = amount;
    serialized_args[3] = nonce;

    context.call_private_function(self.address, 0x78303b89, serialized_args)
  }
  
}
  
  


// Interface for calling Token functions from a public context
struct TokenPublicContextInterface {
  address: Field,
}

impl TokenPublicContextInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  pub fn burn_public(
    self,
    context: PublicContext,
    from: FromBurnPublicStruct,
    amount: Field,
    nonce: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 3];
    serialized_args[0] = from.address;
    serialized_args[1] = amount;
    serialized_args[2] = nonce;

    context.call_public_function(self.address, 0xb0e964d5, serialized_args)
  }
  

  pub fn mint_private(
    self,
    context: PublicContext,
    amount: Field,
    secret_hash: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 2];
    serialized_args[0] = amount;
    serialized_args[1] = secret_hash;

    context.call_public_function(self.address, 0x10763932, serialized_args)
  }
  

  pub fn mint_public(
    self,
    context: PublicContext,
    to: ToMintPublicStruct,
    amount: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 2];
    serialized_args[0] = to.address;
    serialized_args[1] = amount;

    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)
  }
  

  pub fn set_admin(
    self,
    context: PublicContext,
    new_admin: NewAdminSetAdminStruct
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 1];
    serialized_args[0] = new_admin.address;

    context.call_public_function(self.address, 0x41b90896, serialized_args)
  }
  

  pub fn set_minter(
    self,
    context: PublicContext,
    minter: MinterSetMinterStruct,
    approve: bool
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 2];
    serialized_args[0] = minter.address;
    serialized_args[1] = approve as Field;

    context.call_public_function(self.address, 0x7f020b80, serialized_args)
  }
  

  pub fn shield(
    self,
    context: PublicContext,
    from: FromShieldStruct,
    amount: Field,
    secret_hash: Field,
    nonce: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 4];
    serialized_args[0] = from.address;
    serialized_args[1] = amount;
    serialized_args[2] = secret_hash;
    serialized_args[3] = nonce;

    context.call_public_function(self.address, 0x1d24add0, serialized_args)
  }
  

  pub fn transfer_public(
    self,
    context: PublicContext,
    from: FromTransferPublicStruct,
    to: ToTransferPublicStruct,
    amount: Field,
    nonce: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 4];
    serialized_args[0] = from.address;
    serialized_args[1] = to.address;
    serialized_args[2] = amount;
    serialized_args[3] = nonce;

    context.call_public_function(self.address, 0x7db8f449, serialized_args)
  }
  
}
  
  
